JavaScript Notes:

Web Page= HTML(ContentLayer)+CSS(Presentation Layer)+Javascript(Presentation Layer+Interactive Layer)

-----

What is Javascript? 
It is a scripting language runs in background and interacts with html & CSS to see what is change or what u can do. also weakly typed language

-----

Java & javascript are two very different. Ex: Cat is to Catfish

----

Javascript is EICMAScript standard 

----

JQuery is abstarction to the core Javascript ....It is a library to code javascript in very limited code

----

Initiliase Date in javascript
var Date = new Date();

document.body.innerHTML = "" ;

---

javascript Rules
1. JS is case sensitive ex new date() is wrong new Date() is correct.
2. Use camelCase for var , Objects and Classes with uppercase ,Constant are in all caps
3. whitespace matters only to human not to javascript
4. use semicolon; so code should be readable
5. Use comments in ur code // or /*multilin*/


----
to avoid global scope use var. Also using var would provide variable with some scope

Ques: What is the difference between undefined and null in javascript
In JavaScript, undefined is a type, whereas null an object.
It means a variable declared, but no value has been assigned a value. Whereas, null in JavaScript is an assignment value. You can assign it to a variable.

var e=null; console o/p object
var e; console o/p undefined

---

== check equality
=== check equaltity and data type i.e strict equality

----

.....................Topic : Array Methods

[Array Fill] Method   //mutable method
var ingr = [1,2,3,4,5];
ingr.fill(9);   //  [9, 9, 9, 9, 9]

[Array Filter] Method
Ques : provide new immutable array and removing element where condition matches 
var ingr = [1,2,3,4,5];
const removedIdIngre = prevIngredients.filter(ingr => ingr !== 2)
o/p = [1,3,4,5]

[Array slice()]  //gives the shallow copy
const animals = ['ant', 'bison', 'camel', 'duck', 'elephant'];
console.log(animals.slice(2));   // expected output: Array ["camel", "duck", "elephant"]
console.log(animals.slice(2, 4));  // expected output: Array ["camel", "duck"]
console.log(animals.slice(1, 5));  // expected output: Array ["bison", "camel", "duck", "elephant"]

[Array splice ] //removes or adds the array
const months = ['Jan', 'March', 'April', 'June'];
months.splice(1, 0, 'Feb'); //add
// inserts at index 1 , Array ["Jan", "Feb", "March", "April", "June"]


months.splice(4, 1, 'May');   //removes
// replaces 1 element at index 4 , ["Jan", "Feb", "March", "April", "May"]
Note: If u dont pass third argument it just removes that item from array


const months = ['Jan', 'March', 'April', 'June'];
months.splice(1, 1);   //removes
// replaces 1 element at index 4 , ["Jan","April", "May"]



Note: map filter reduce all give immutable copy
----

ECMA Script 2015
const & let......

let :- Block scope variable & Smaller scope than var
use when u want to limit variable to just a code block use let
-------------
Javascript Object Creation   //very important

1. first technique
var course = new Object();   
course.name="physics";
course.teacher="sam";

2. second technique
var course = {   
name:"physics",
teacher:"sam",
views:0,
updateviews:function()
{
return ++view:
}
}


3. third technique using constructor

Object Constrcutors.....
function Course(name,teacher){
this.name=name;
this.teacher=teacher;
}

var course1 = new Course("physics","sam");  
var course1 = new Course("math","andrew");

------------------
Dot Notation Bracket Notation
course.title   course["title"]  //very important ....mug it
---------------

Closures....

function doSomeMath(){
	var a=1;
	var b=2;

	function multiply()
		{
		return a*b;
		}
	return multiply;
	}

var result = doSomeMath(); summary
console.log(result);//o/p Full multiply function body
console.log(result());//o/p 2

It is Closure in the above doSomeMath() function
var a=1;
var b=2;

function multiply()
{
return a*b;
}

Definition of Closures : a function inside function that relies on variable in the outside function to work.
Note: if you change any value in closures it wont affect outside varibale.

-----

Question:What happens if you try to set new value for a const variable that is already defined?
The script will break on an exception.  //Uncaught SyntaxError: Identifier 'i' has already been declare
you can use try catch to handle the error.

BOM:Browser Object Model(window,browser etc)

DOM:Document Object Model(HTML,CSS,

document.getElementById("id");
document.getElementsByClassName("claassname");
document.querySelector(".hello"); //first specified className hello
document.querySelectorAll("a"); //all all anchor tag in dom

document.querySelector(".hello a"); //first a with className hello
document.querySelectorAll(".hello a"); //all  anchor tag with className hello in dom


Browser Level Events
Load- when the resource and dependednts have finished loading
Error-when a resource failed to load
Online/Offline-self explanatory
Resize
Scroll

DOM Events
Focus
Blur
Reset/Submit
MouseEvent

element.classList.toggle("hide") hide the hide applied before

If u use two click on same element then one of click event is hindered
Alternative:use Addeventlisterner

element.addEventListener("click",function name without paranthesis, false);  //add event listener on element element

functionName : name or name() . use name(not name()) only if you dont want it to execute when script loads



Scope of let & var
<!DOCTYPE html>
<html lang="en-US">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>An empty page</title>
</head>

<body>

</body>

<script src="script.js">

</script>

</html>





------------------------

<!DOCTYPE html>
<html lang="en-US">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>An empty page</title>
</head>

<body>

</body>
<script>

var d = new Date();
document.body.innerHTML="<h1>"+d +"</h1>";

</script>
</html>

-----------------------


function logscope()
{
var localVar=2;

if(localVar){

	var localVar = "hi";
	console.log(localVar);

}
console.log(localVar);

}

O/p hi hi
--------

function logscope()
{
var localVar=2;

if(localVar){

	let localVar = "hi";
	console.log(localVar);

}
console.log(localVar);

}

O/p hi 2

----

