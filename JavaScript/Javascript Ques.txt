Ques 1:
var x=5;
var y=6;
var res=eval("x*y"); 
document.write(res);
Ans 1: 30 , eval evaluates the expression



Ques : push & concat difference?   //[Array 
(return same array with pushing it i.e mutated obj) and concat (add item and return copy of the array i.e immutable array obj)


?
function insertItem(array, action) {
    let newArray = array.slice();   //gives copy of the array , [Array slice]Method
    newArray.splice(action.index, 0, action.item);
    return newArray;
}

? 
function removeItem(array, action) {
    let newArray = array.slice();
    newArray.splice(action.index, 1);
    return newArray;
}

[Array Fill] Method   //mutable method
var ingr = [1,2,3,4,5];
ingr.fill(9);   //  [9, 9, 9, 9, 9]

[Array Filter] Method
Ques : provide new immutable array and removing element where condition matches 
var ingr = [1,2,3,4,5];
const removedIdIngre = prevIngredients.filter(ingr => ingr !== 2)
o/p = [1,3,4,5]

[Array slice()]  //gives theshalow copy
const animals = ['ant', 'bison', 'camel', 'duck', 'elephant'];
console.log(animals.slice(2));   // expected output: Array ["camel", "duck", "elephant"]
console.log(animals.slice(2, 4));  // expected output: Array ["camel", "duck"]
console.log(animals.slice(1, 5));  // expected output: Array ["bison", "camel", "duck", "elephant"]

[Array splice ] //removes or adds the array
const months = ['Jan', 'March', 'April', 'June'];
months.splice(1, 0, 'Feb'); //add
// inserts at index 1 , Array ["Jan", "Feb", "March", "April", "June"]

months.splice(4, 1, 'May');   //removes
// replaces 1 element at index 4 , ["Jan", "Feb", "March", "April", "May"]








Ques : What is the use of useStrict in  javascript?  
 It is not a statement, but a literal expression
 With strict mode, you can not, for example, use undeclared variables.
eliminates silent errors
instead throws them so that the code won't run with errors in the code
 
Ques :Is javscript multithreaded ? It is single threaded //it is also disadvanatage of java

Ques : Why arrow function is better than normal function?
Arrow syntax automatically binds this to the surrounding code's context.
arrow functions are less verbose
closure problem solved

Ques : Array & Object Destructuring?
const array = [1, 2, 3];
const [a, b] = array;

const myObj = {
 name: 'Max',
 age: 28
 }
const {name} = myObj;
console.log(name); //'Max'
 
-----------------
Ques:What is First Class Function?
 A programming language is said to have First-class functions when functions in that language are treated like any other variable
 It can be passed as an arg or return from a function
 const foo = function() {
   console.log("foobar");
}
// Invoke it using the variable
foo();

Ques : document.write("1 plus 1 is " + 1 + 1); //1 plus 1 is 11

Ques : Lexical Scoping ?
A lexical scope in JavaScript means that a variable defined outside a function can be accessible inside another function defined after the variable declaration. But the opposite is not true; the variables defined inside a function will not be accessible outside that function.

This concept is heavily used in closures in JavaScript.

Let's say we have the below code.is

var x = 2;
var add = function() {
    var y = 1;
    return x + y;
};



Ques : How to add event listener on element?
element.addEventListener("click",function name without paranthesis, false);

what is that third argument? 
It is "useCapture" in the specification allows the programmer to specify which phase they want to use capture phase and bubbling phase events
capturephase & bubblephase 
ex: when click on a element
html (capture phase)
body (capture phase)
a (capture phase)
a (bubbling phase)
body (bubbing phase)
html (bubbling phase)



Ques : How to set the cursor to wait in JavaScript?
window.document.body.style.cursor = "wait";   

Ques:What is the difference between View state and Session state?
View state : session only for current page ex: paymenet page
Session state : session for any page ex:you can open your amazon account on any page

Ques: popup boxes in javascript
alert , confirm , prompt

Ques: How can we detect OS of the client machine using JavaScript?
navigator.appVersion

Ques:Array Initiliase
var arrayname=[value1,value2.....valueN];  

var emp = new Array();  
emp[0] = "Arun";  
emp[1] = "Varun";  

var emp= new Array("Jai","Vijay","Smith");  

Ques:Does fetch work in IE?   //No



---------

https://javascript.info/async

Ques: what is CallBacks?
Ex if you want to load a script and call a func that script has in it. If we call after load scriot it will throw error as may be script is not loaded
instead we use callbacks to call that function

...For Error handling
function loadScript(src, callback) {
  let script = document.createElement('script');
  script.src = src;

  script.onload = () => callback(null, script);
  script.onerror = () => callback(new Error(`Script load error for ${src}`));

  document.head.append(script);
}

loadScript('/my/script.js', function(error, script) {  //error-first callback” style.
  if (error) {
    // handle error
  } else {
    // script loaded successfully
  }
});

Ques 2: What is Pyramid of doom in Javascript?
callbacks in callbacks........

Ques 3: What is Promise   //plz refere PromiseDemo.html in Javascript folder
let promise = new Promise(function(resolve, reject) {
  // executor (the producing code, "singer")
});


The promise object returned by the new Promise constructor has these internal properties:

state — initially "pending", then changes to either "fulfilled" when resolve is called or "rejected" when reject is called.
result — initially undefined, then changes to value when resolve(value) called or error when reject(error) is called.

Ques 4 What is .then?
promise.then(
  function(result) { /* handle a successful result */ },
  function(error) { /* handle an error */ }
);


Ques: What is Javascript Pure Function?
A function is only pure if, given the same input, it will always produce the same output.

Ex: Math.random() is impure new Date().toLocaleTimeString() is pure

Referenece: https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976


Ques: What is Callbacks?

Ques: What is Array.prototype?

Ques:How Arrow function solve closures problem?





=================================================Pseudo Coding Problems=======================================================

use jsbin editor online

Ques: ["cba","wrz","zyx"] reverse each word in this array .

const arr=["cba","wrz","zyx"];
console.log(arr);
let newrr=arr.map(a => a.split("").reverse().join(""));
console.log(newrr);

---------------------
Ques:if input is [1,10,[20,30],90], output should be  [1,10,20,30,90]

const arr=[1,10,[20,30],90];
console.log(arr);
let arr2=[];
arr.map(
  ele => Array.isArray(ele)?arr2.push(...ele):arr2.push(ele)
);
console.log(arr2);


Note: Array.isArray & spread operator
-------------------
Ques : find the maximum occurerence of words in the given string?

const str = "java is is good lan lang lang";
let arr={};
let arr2={};

str.split(" ").map(e => arr[e] ? ++arr[e]:arr[e]=1);   //write approach to check json

str.split(" ").map(e => arr2.e ? ++arr2.e:arr2.e=1);   //wrong approach

console.log(arr);
console.log(arr2);



---------------
Ques:Round the given number to nearest multiple of 10
e.g
input: 66 Output: 10
input 666 Output 100
input 4848 Output 1000
for 0-9 input Output 0

Ans:
let l = Math.pow(10,Math.floor(Math.log10(40)));
const a = (l==1) ? console.log(0) : console.log(l);

--------------------
Ques:find out the employee which are having age ‹ 50 from employee array.

const emp =[{age:30},{age:50},{age:60},{age:70}];

let emp50 = emp.filter(e => {                             //let emp50 = emp.filter(e => e.age>50); it will also work
 return (e.age>50 ?  true : false)
})

console.log(emp50);


-------------------
Ques:reverse each word in the given string, don't do reversal of entire string.

const arr="Java is awe some lang";
console.log(arr);
let newrr=arr.split(" ").map(ele => ele.split("").reverse().join(""));
console.log(newrr);

---------------
Ques: Copy one obj in another obj?
var obj1={k:v,k2:v2}
var obj2={k3:v3,k4:v4}  

var obj3 ={...obj1,...obj2};  //keys must be different;

Ques : 


